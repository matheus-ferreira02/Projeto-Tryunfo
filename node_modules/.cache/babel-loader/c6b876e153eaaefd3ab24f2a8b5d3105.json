{"ast":null,"code":"var _jsxFileName = \"/home/matheus_totoso/projetos-trybe/sd-017-project-tryunfo/src/App.js\";\nimport React from 'react';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.validationButton = () => {\n      const {\n        cardName,\n        cardDescription,\n        cardImage,\n        cardAttr1,\n        cardAttr2,\n        cardAttr3\n      } = this.state;\n      const limitAttr = 90;\n      const attr1Validation = cardAttr1 >= 0 && cardAttr1 <= limitAttr;\n      const totalAttr = Number(cardAttr1) + Number(cardAttr2) + Number(cardAttr3);\n      const attrsLimit = 210;\n      const validationAllAttr = totalAttr <= attrsLimit;\n      console.log(attr1Validation);\n      const errorCases = [!cardName.length, !cardDescription.length, attr1Validation, !validationAllAttr, !cardImage.length];\n      console.log(errorCases);\n      const filledForm = errorCases.every(error => error !== true);\n      this.setState({\n        isSaveButtonDisabled: !filledForm\n      });\n    };\n\n    this.inputChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        id\n      } = target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState({\n        [id]: value\n      }, this.validationButton);\n    };\n\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      cardImage: '',\n      cardAttr1: 0,\n      cardAttr2: 0,\n      cardAttr3: 0,\n      cardRare: 'normal',\n      cardTrunfo: false,\n      isSaveButtonDisabled: true\n    };\n  }\n\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardImage,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardRare,\n      cardTrunfo,\n      isSaveButtonDisabled\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        cardName: cardName,\n        cardDescription: cardDescription,\n        cardImage: cardImage,\n        cardAttr1: cardAttr1,\n        cardAttr2: cardAttr2,\n        cardAttr3: cardAttr3,\n        cardRare: cardRare,\n        cardTrunfo: cardTrunfo,\n        isSaveButtonDisabled: isSaveButtonDisabled,\n        onInputChange: this.inputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        cardName: cardName,\n        cardDescription: cardDescription,\n        cardImage: cardImage,\n        cardAttr1: cardAttr1,\n        cardAttr2: cardAttr2,\n        cardAttr3: cardAttr3,\n        cardRare: cardRare,\n        cardTrunfo: cardTrunfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/matheus_totoso/projetos-trybe/sd-017-project-tryunfo/src/App.js"],"names":["React","Form","Card","App","Component","constructor","validationButton","cardName","cardDescription","cardImage","cardAttr1","cardAttr2","cardAttr3","state","limitAttr","attr1Validation","totalAttr","Number","attrsLimit","validationAllAttr","console","log","errorCases","length","filledForm","every","error","setState","isSaveButtonDisabled","inputChange","target","id","value","type","checked","cardRare","cardTrunfo","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      cardImage: '',\n      cardAttr1: 0,\n      cardAttr2: 0,\n      cardAttr3: 0,\n      cardRare: 'normal',\n      cardTrunfo: false,\n      isSaveButtonDisabled: true,\n    };\n  }\n\n  validationButton = () => {\n    const {\n      cardName,\n      cardDescription,\n      cardImage,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n    } = this.state;\n\n    const limitAttr = 90;\n    const attr1Validation = cardAttr1 >= 0 && cardAttr1 <= limitAttr;\n\n    const totalAttr = Number(cardAttr1) + Number(cardAttr2) + Number(cardAttr3);\n    const attrsLimit = 210;\n    const validationAllAttr = totalAttr <= attrsLimit;\n\n    console.log(attr1Validation);\n\n    const errorCases = [\n      !cardName.length,\n      !cardDescription.length,\n      attr1Validation,\n      !validationAllAttr,\n      !cardImage.length,\n    ];\n    console.log(errorCases);\n\n    const filledForm = errorCases.every((error) => error !== true);\n    this.setState({ isSaveButtonDisabled: !filledForm });\n  }\n\n  inputChange = ({ target }) => {\n    const { id } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [id]: value,\n    }, this.validationButton);\n  }\n\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardImage,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardRare,\n      cardTrunfo,\n      isSaveButtonDisabled,\n    } = this.state;\n\n    return (\n      <div>\n        <Form\n          cardName={ cardName }\n          cardDescription={ cardDescription }\n          cardImage={ cardImage }\n          cardAttr1={ cardAttr1 }\n          cardAttr2={ cardAttr2 }\n          cardAttr3={ cardAttr3 }\n          cardRare={ cardRare }\n          cardTrunfo={ cardTrunfo }\n          isSaveButtonDisabled={ isSaveButtonDisabled }\n          onInputChange={ this.inputChange }\n        />\n\n        <Card\n          cardName={ cardName }\n          cardDescription={ cardDescription }\n          cardImage={ cardImage }\n          cardAttr1={ cardAttr1 }\n          cardAttr2={ cardAttr2 }\n          cardAttr3={ cardAttr3 }\n          cardRare={ cardRare }\n          cardTrunfo={ cardTrunfo }\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}