{"ast":null,"code":"var _jsxFileName = \"/home/matheus_totoso/projetos-trybe/sd-017-project-tryunfo/src/components/CardsSaves.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CardsSaves extends Component {\n  render() {\n    const {\n      cards\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: card.cardName\n        }, card.cardName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nCardsSaves.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    cardName: PropTypes.string,\n    cardImage: PropTypes.string,\n    cardDescription: PropTypes.string,\n    cardAttr1: PropTypes.string,\n    cardAttr2: PropTypes.string,\n    cardAttr3: PropTypes.string,\n    hasTrunfo: PropTypes.bool\n  })).isRequired\n};","map":{"version":3,"sources":["/home/matheus_totoso/projetos-trybe/sd-017-project-tryunfo/src/components/CardsSaves.jsx"],"names":["React","Component","PropTypes","CardsSaves","render","cards","props","map","card","cardName","propTypes","arrayOf","shape","string","cardImage","cardDescription","cardAttr1","cardAttr2","cardAttr3","hasTrunfo","bool","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAChDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AAEA,wBACE;AAAA,6BACE;AAAA,kBACID,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACV;AAAA,oBAA4BA,IAAI,CAACC;AAAjC,WAAUD,IAAI,CAACC,QAAf;AAAA;AAAA;AAAA;AAAA,gBADA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAb+C;AAgBlDN,UAAU,CAACO,SAAX,GAAuB;AACrBL,EAAAA,KAAK,EAAEH,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACU,KAAV,CAAgB;AACvCH,IAAAA,QAAQ,EAAEP,SAAS,CAACW,MADmB;AAEvCC,IAAAA,SAAS,EAAEZ,SAAS,CAACW,MAFkB;AAGvCE,IAAAA,eAAe,EAAEb,SAAS,CAACW,MAHY;AAIvCG,IAAAA,SAAS,EAAEd,SAAS,CAACW,MAJkB;AAKvCI,IAAAA,SAAS,EAAEf,SAAS,CAACW,MALkB;AAMvCK,IAAAA,SAAS,EAAEhB,SAAS,CAACW,MANkB;AAOvCM,IAAAA,SAAS,EAAEjB,SAAS,CAACkB;AAPkB,GAAhB,CAAlB,EAQHC;AATiB,CAAvB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class CardsSaves extends Component {\n  render() {\n    const { cards } = this.props;\n\n    return (\n      <div>\n        <ul>\n          { cards.map((card) => (\n            <li key={ card.cardName }>{ card.cardName }</li>\n          )) }\n        </ul>\n      </div>\n    );\n  }\n}\n\nCardsSaves.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    cardName: PropTypes.string,\n    cardImage: PropTypes.string,\n    cardDescription: PropTypes.string,\n    cardAttr1: PropTypes.string,\n    cardAttr2: PropTypes.string,\n    cardAttr3: PropTypes.string,\n    hasTrunfo: PropTypes.bool,\n  })).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}