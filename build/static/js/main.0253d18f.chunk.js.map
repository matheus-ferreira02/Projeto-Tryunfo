{"version":3,"sources":["components/Input.jsx","components/InputSelect.jsx","utils/constants.js","components/TextArea.jsx","components/InputCheckbox.jsx","components/Form.jsx","components/Card.jsx","components/Filter.jsx","App.js","index.js"],"names":["Input","this","props","type","label","id","dataTest","value","disabled","onChange","placeholder","htmlFor","Component","InputSelect","options","map","option","MAX_ATTRIBUTE","OPTIONS","OPTIONS_FILTER","TEXT_VALIDATION","TextArea","maxLength","InputCheckbox","checked","className","Form","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","cardTrunfo","hasTrunfo","isSaveButtonDisabled","onInputChange","onSaveButtonClick","remainingPts","Number","onSubmit","icon","Card","btnRemove","removeButton","src","alt","onClick","name","Filter","nameFind","superTrunfoFind","rareFind","App","validationButton","state","attr1Validation","attr2Validation","attr3Validation","validationAllAttr","filledForm","length","every","error","setState","inputChange","target","trunfo","event","preventDefault","prevState","cardsSaves","find","card","newArray","filter","findInput","findCard","includes","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0253d18f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Input extends Component {\n  render() {\n    const {\n      type,\n      label,\n      id,\n      dataTest,\n      value,\n      disabled,\n      onChange,\n      placeholder } = this.props;\n\n    return (\n      <label htmlFor={ id }>\n        { label }\n        <input\n          type={ type }\n          id={ id }\n          data-testid={ dataTest }\n          value={ value }\n          disabled={ disabled }\n          onChange={ onChange }\n          placeholder={ placeholder }\n        />\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  dataTest: PropTypes.string,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n  placeholder: PropTypes.string,\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class InputSelect extends Component {\n  render() {\n    const { label, options, id, dataTest, value, disabled, onChange } = this.props;\n\n    return (\n      <label htmlFor={ id }>\n        { label }\n        <select\n          id={ id }\n          data-testid={ dataTest }\n          value={ value }\n          disabled={ disabled }\n          onChange={ onChange }\n        >\n          {options.map((option) => (\n            <option key={ option } value={ option }>{ option }</option>\n          ))}\n        </select>\n      </label>\n    );\n  }\n}\n\nInputSelect.propTypes = {\n  label: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.string),\n  id: PropTypes.string,\n  dataTest: PropTypes.string,\n  disabled: PropTypes.bool,\n}.isRequired;\n","export const MAX_ATTRIBUTE = 90;\n\nexport const OPTIONS = ['normal', 'raro', 'muito raro'];\n\nexport const OPTIONS_FILTER = ['todas', 'normal', 'raro', 'muito raro'];\n\nexport const TEXT_VALIDATION = 'O valor deve ficar entre 0 e 90';\n\nexport const MAX_ALL_ATR = 210;\n\nexport const MAX_LENGTH_TEXTAREA = 70;\n\nexport default {\n  MAX_ATTRIBUTE,\n  OPTIONS,\n  OPTIONS_FILTER,\n  TEXT_VALIDATION,\n  MAX_ALL_ATR,\n  MAX_LENGTH_TEXTAREA,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { MAX_LENGTH_TEXTAREA } from '../utils/constants';\n\nexport default class TextArea extends Component {\n  render() {\n    const { label, id, dataTest, value, onChange, placeholder } = this.props;\n\n    return (\n      <label htmlFor={ id }>\n        { label }\n        <textarea\n          id={ id }\n          data-testid={ dataTest }\n          value={ value }\n          onChange={ onChange }\n          placeholder={ placeholder }\n          maxLength={ MAX_LENGTH_TEXTAREA }\n        />\n      </label>\n    );\n  }\n}\n\nTextArea.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string,\n  dataTest: PropTypes.string,\n  placeholder: PropTypes.string,\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class InputCheckbox extends Component {\n  render() {\n    const { type, label, id, dataTest, checked, onChange } = this.props;\n\n    return (\n      <label htmlFor={ id }>\n        <input\n          className=\"checkbox\"\n          type={ type }\n          id={ id }\n          data-testid={ dataTest }\n          checked={ checked }\n          onChange={ onChange }\n        />\n        { label }\n      </label>\n    );\n  }\n}\n\nInputCheckbox.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  dataTest: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from './Input';\nimport InputSelect from './InputSelect';\nimport TextArea from './TextArea';\nimport InputCheckbox from './InputCheckbox';\nimport { MAX_ATTRIBUTE, OPTIONS, TEXT_VALIDATION, MAX_ALL_ATR } from '../utils/constants';\n\nexport default class Form extends Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      isSaveButtonDisabled,\n      onInputChange,\n      onSaveButtonClick,\n    } = this.props;\n\n    const remainingPts = MAX_ALL_ATR\n    - (Number(cardAttr1)\n    + Number(cardAttr2)\n    + Number(cardAttr3));\n\n    return (\n      <form className=\"formCard\" onSubmit={ onSaveButtonClick }>\n        <Input\n          type=\"text\"\n          label=\"Nome\"\n          placeholder=\"Digite o nome da carta\"\n          id=\"cardName\"\n          dataTest=\"name-input\"\n          value={ cardName }\n          onChange={ onInputChange }\n        />\n\n        <TextArea\n          label=\"Descrição\"\n          placeholder=\"Digite a descrição da carta\"\n          id=\"cardDescription\"\n          dataTest=\"description-input\"\n          value={ cardDescription }\n          onChange={ onInputChange }\n        />\n\n        <Input\n          type=\"number\"\n          label=\"Atributo 1\"\n          placeholder=\"Pontos de atributo\"\n          id=\"cardAttr1\"\n          dataTest=\"attr1-input\"\n          value={ cardAttr1 }\n          onChange={ onInputChange }\n        />\n\n        { (cardAttr1 > MAX_ATTRIBUTE || cardAttr1 < 0) && (\n          <span className=\"validation\">\n            { TEXT_VALIDATION }\n          </span>) }\n\n        <Input\n          type=\"number\"\n          label=\"Atributo 2\"\n          placeholder=\"Pontos de atributo\"\n          id=\"cardAttr2\"\n          dataTest=\"attr2-input\"\n          value={ cardAttr2 }\n          onChange={ onInputChange }\n        />\n\n        { (cardAttr2 > MAX_ATTRIBUTE || cardAttr2 < 0) && (\n          <span className=\"validation\">\n            { TEXT_VALIDATION }\n          </span>) }\n\n        <Input\n          type=\"number\"\n          label=\"Atributo 3\"\n          placeholder=\"Pontos de atributo\"\n          id=\"cardAttr3\"\n          dataTest=\"attr3-input\"\n          value={ cardAttr3 }\n          onChange={ onInputChange }\n        />\n\n        { (cardAttr3 > MAX_ATTRIBUTE || cardAttr3 < 0) && (\n          <span className=\"validation\">\n            { TEXT_VALIDATION }\n          </span>) }\n\n        <span className=\"remaining_pts\">\n          Pontos Restantes:\n          { remainingPts < 0\n            ? 0\n            : remainingPts }\n        </span>\n\n        <div className=\"input_image\">\n          <i className=\"fas fa-link\" />\n          <Input\n            icon=\"fas fa-link\"\n            type=\"text\"\n            label=\"Imagem\"\n            placeholder=\"URL da imagem\"\n            id=\"cardImage\"\n            dataTest=\"image-input\"\n            value={ cardImage }\n            onChange={ onInputChange }\n          />\n        </div>\n\n        <InputSelect\n          label=\"Raridade\"\n          options={ OPTIONS }\n          id=\"cardRare\"\n          dataTest=\"rare-input\"\n          value={ cardRare }\n          onChange={ onInputChange }\n        />\n\n        { hasTrunfo\n          ? (\n            <span className=\"text_validation\">\n              Você já tem um Super Trunfo em seu baralho\n            </span>)\n          : (\n            <InputCheckbox\n              type=\"checkbox\"\n              label=\"Super Trunfo\"\n              id=\"cardTrunfo\"\n              dataTest=\"trunfo-input\"\n              checked={ cardTrunfo }\n              onChange={ onInputChange }\n            />) }\n\n        <button\n          className=\"submit_btn\"\n          type=\"submit\"\n          data-testid=\"save-button\"\n          disabled={ isSaveButtonDisabled }\n        >\n          Salvar\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  cardName: PropTypes.string,\n  cardDescription: PropTypes.string,\n  cardAttr1: PropTypes.string,\n  cardAttr2: PropTypes.string,\n  cardAttr3: PropTypes.string,\n  cardImage: PropTypes.string,\n  cardRare: PropTypes.string,\n  hasTrunfo: PropTypes.bool,\n  isSaveButtonDisabled: PropTypes.bool,\n  onInputChange: PropTypes.func,\n  onSaveButtonClick: PropTypes.func,\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Card extends Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      btnRemove,\n      removeButton,\n    } = this.props;\n\n    return (\n      <section className=\"card\">\n        <h1 data-testid=\"name-card\">{ cardName }</h1>\n\n        <img data-testid=\"image-card\" src={ cardImage } alt={ cardName } />\n\n        <p className=\"desc\" data-testid=\"description-card\">{ cardDescription }</p>\n\n        <div className=\"div-white\">\n          <ul className=\"attr-text\">\n            <li>\n              Attr01\n              <span data-testid=\"attr1-card\">{ cardAttr1 }</span>\n            </li>\n\n            <li>\n              Attr02\n              <span data-testid=\"attr2-card\">{ cardAttr2 }</span>\n            </li>\n\n            <li>\n              Attr02\n              <span data-testid=\"attr3-card\">{ cardAttr3 }</span>\n            </li>\n          </ul>\n\n          <p className=\"rare\" data-testid=\"rare-card\">{`Raridade: ${cardRare}`}</p>\n\n          { cardTrunfo && (\n            <p\n              className=\"super-trunfo\"\n              data-testid=\"trunfo-card\"\n            >\n              Super Trunfo\n            </p>) }\n        </div>\n\n        { btnRemove && (\n          <button\n            type=\"button\"\n            onClick={ removeButton }\n            name={ cardName }\n            data-testid=\"delete-button\"\n          >\n            Excluir\n          </button>) }\n      </section>\n    );\n  }\n}\n\nCard.propTypes = {\n  CardName: PropTypes.string,\n  cardDescription: PropTypes.string,\n  cardAttr1: PropTypes.number,\n  cardAttr2: PropTypes.number,\n  cardAttr3: PropTypes.number,\n  cardImage: PropTypes.string,\n  cardRare: PropTypes.string,\n  cardTrunfo: PropTypes.bool,\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from './Input';\nimport InputCheckbox from './InputCheckbox';\nimport InputSelect from './InputSelect';\nimport { OPTIONS_FILTER } from '../utils/constants';\n\nexport default class Filter extends Component {\n  render() {\n    const { nameFind, superTrunfoFind, rareFind, onChange } = this.props;\n\n    return (\n      <div className=\"filter\">\n        <h3>Filtro de busca</h3>\n\n        <Input\n          id=\"nameFind\"\n          type=\"text\"\n          placeholder=\"Nome da carta\"\n          dataTest=\"name-filter\"\n          value={ nameFind }\n          disabled={ superTrunfoFind }\n          onChange={ onChange }\n        />\n\n        <InputSelect\n          id=\"rareFind\"\n          type=\"text\"\n          label=\"Raridade\"\n          dataTest=\"rare-filter\"\n          options={ OPTIONS_FILTER }\n          value={ rareFind }\n          disabled={ superTrunfoFind }\n          onChange={ onChange }\n        />\n\n        <InputCheckbox\n          type=\"checkbox\"\n          id=\"superTrunfoFind\"\n          label=\"Super Trunfo\"\n          dataTest=\"trunfo-filter\"\n          checked={ superTrunfoFind }\n          onChange={ onChange }\n        />\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  nameFind: PropTypes.string,\n  superTrunfoFind: PropTypes.bool,\n  rareFind: PropTypes.string,\n  onChange: PropTypes.func,\n}.isRequired;\n","import React from 'react';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport './App.css';\nimport Filter from './components/Filter';\nimport { MAX_ATTRIBUTE } from './utils/constants';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      cardImage: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      hasTrunfo: false,\n      isSaveButtonDisabled: true,\n      cardsSaves: [],\n      nameFind: '',\n      rareFind: 'todas',\n      superTrunfoFind: false,\n    };\n  }\n\n  validationButton = () => {\n    const {\n      cardName,\n      cardDescription,\n      cardImage,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n    } = this.state;\n\n    const attr1Validation = cardAttr1 >= 0 && cardAttr1 <= MAX_ATTRIBUTE;\n    const attr2Validation = cardAttr2 >= 0 && cardAttr2 <= MAX_ATTRIBUTE;\n    const attr3Validation = cardAttr3 >= 0 && cardAttr3 <= MAX_ATTRIBUTE;\n\n    const totalAttr = Number(cardAttr1) + Number(cardAttr2) + Number(cardAttr3);\n    const attrsLimit = 210;\n    const validationAllAttr = totalAttr <= attrsLimit;\n\n    const errorCases = [\n      !cardName.length,\n      !cardDescription.length,\n      !attr1Validation,\n      !attr2Validation,\n      !attr3Validation,\n      !validationAllAttr,\n      !cardImage.length,\n    ];\n\n    const filledForm = errorCases.every((error) => error !== true);\n    this.setState({ isSaveButtonDisabled: !filledForm });\n  }\n\n  inputChange = ({ target }) => {\n    const { id } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [id]: value,\n    }, this.validationButton);\n  }\n\n  hasTrunfo = (trunfo) => {\n    this.setState({\n      hasTrunfo: trunfo,\n    });\n  }\n\n  onSaveButtonClick = (event) => {\n    event.preventDefault();\n\n    const {\n      cardName,\n      cardImage,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardRare,\n      cardTrunfo,\n    } = this.state;\n\n    if (cardTrunfo) this.hasTrunfo(cardTrunfo);\n\n    this.setState((prevState) => ({\n      cardName: '',\n      cardDescription: '',\n      cardImage: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      isSaveButtonDisabled: true,\n      cardsSaves: [\n        ...prevState.cardsSaves,\n        {\n          cardName,\n          cardImage,\n          cardDescription,\n          cardAttr1,\n          cardAttr2,\n          cardAttr3,\n          cardRare,\n          cardTrunfo,\n        }],\n    }));\n  }\n\n  removeButton = ({ target }) => {\n    const { cardsSaves } = this.state;\n    const { name } = target;\n\n    const hasTrunfo = cardsSaves.find((card) => card.cardName === name).cardTrunfo;\n\n    const newArray = cardsSaves.filter((card) => card.cardName !== name);\n    this.setState({\n      cardsSaves: newArray,\n    });\n\n    if (hasTrunfo) {\n      this.setState({\n        hasTrunfo: false,\n      });\n    }\n  }\n\n  findInput = ({ target }) => {\n    const { id } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [id]: value,\n    });\n  }\n\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardImage,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      isSaveButtonDisabled,\n      cardsSaves,\n      nameFind,\n      rareFind,\n      superTrunfoFind,\n    } = this.state;\n\n    let findCard = nameFind.length\n      ? cardsSaves.filter((card) => card.cardName.includes(nameFind))\n      : cardsSaves;\n\n    findCard = rareFind !== 'todas'\n      ? findCard.filter((card) => card.cardRare === rareFind)\n      : findCard;\n\n    findCard = superTrunfoFind\n      ? cardsSaves.filter((card) => card.cardTrunfo)\n      : findCard;\n\n    return (\n      <div>\n        <section className=\"new_card\">\n          <div className=\"add_new_card\">\n            <h1>Adicionar nova carta</h1>\n            <Form\n              cardName={ cardName }\n              cardDescription={ cardDescription }\n              cardImage={ cardImage }\n              cardAttr1={ cardAttr1 }\n              cardAttr2={ cardAttr2 }\n              cardAttr3={ cardAttr3 }\n              cardRare={ cardRare }\n              cardTrunfo={ cardTrunfo }\n              hasTrunfo={ hasTrunfo }\n              isSaveButtonDisabled={ isSaveButtonDisabled }\n              onInputChange={ this.inputChange }\n              onSaveButtonClick={ this.onSaveButtonClick }\n            />\n          </div>\n\n          <div className=\"preview\">\n            <h1>Pré-visualização</h1>\n            <Card\n              cardName={ cardName }\n              cardDescription={ cardDescription }\n              cardImage={ cardImage }\n              cardAttr1={ cardAttr1 }\n              cardAttr2={ cardAttr2 }\n              cardAttr3={ cardAttr3 }\n              cardRare={ cardRare }\n              cardTrunfo={ cardTrunfo }\n            />\n          </div>\n        </section>\n\n        <div className=\"filter_cards\">\n          <div className=\"all-cards\">\n            <h1>Todas as cartas</h1>\n\n            <Filter\n              nameFind={ nameFind }\n              superTrunfoFind={ superTrunfoFind }\n              rareFind={ rareFind }\n              onChange={ this.findInput }\n            />\n          </div>\n\n          <div className=\"cards\">\n            { findCard.map((card) => (\n              <Card\n                key={ card.cardName }\n                cardName={ card.cardName }\n                cardDescription={ card.cardDescription }\n                cardImage={ card.cardImage }\n                cardAttr1={ card.cardAttr1 }\n                cardAttr2={ card.cardAttr2 }\n                cardAttr3={ card.cardAttr3 }\n                cardRare={ card.cardRare }\n                cardTrunfo={ card.cardTrunfo }\n                removeButton={ this.removeButton }\n                btnRemove={ findCard.length !== 0 }\n              />\n            )) }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}